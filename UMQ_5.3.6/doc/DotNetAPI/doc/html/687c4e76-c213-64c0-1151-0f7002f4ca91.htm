<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp"><head><title>com.latencybusters.lbm Namespace</title><link rel="stylesheet" type="text/css" href="../styles/presentation.css" /><link rel="stylesheet" type="text/css" href="ms-help://Hx/HxRuntime/HxLink.css" /><script type="text/javascript" src="../scripts/script_prototype.js"> </script><script type="text/javascript" src="../scripts/EventUtilities.js"> </script><script type="text/javascript" src="../scripts/StyleUtilities.js"> </script><script type="text/javascript" src="../scripts/SplitScreen.js"> </script><script type="text/javascript" src="../scripts/ElementCollection.js"> </script><script type="text/javascript" src="../scripts/MemberFilter.js"> </script><script type="text/javascript" src="../scripts/CollapsibleSection.js"> </script><script type="text/javascript" src="../scripts/LanguageFilter.js"> </script><script type="text/javascript" src="../scripts/CookieDataStore.js"> </script><meta name="file" content="687c4e76-c213-64c0-1151-0f7002f4ca91" /><xml xmlns:msxsl="urn:schemas-microsoft-com:xslt"><MSHelp:Attr Name="AssetID" Value="N:com.latencybusters.lbm" /><MSHelp:Keyword Index="A" Term="N:com.latencybusters.lbm" /><MSHelp:Keyword Index="A" Term="frlrfcomlatencybusterslbm" /><MSHelp:Keyword Index="K" Term="com.latencybusters.lbm namespace" /><MSHelp:Keyword Index="F" Term="com.latencybusters.lbm" /><MSHelp:Attr Name="TopicType" Value="apiref" /><MSHelp:Attr Name="TopicType" Value="kbSyntax" /><MSHelp:Attr Name="Locale" Value="en-us" /><MSHelp:Attr Name="Abstract" Value="LBM Classes" /></xml></head><body><div id="control"><span class="productTitle">LBM .Net API Documentation</span><br /><span class="topicTitle">com.latencybusters.lbm Namespace</span><br /><div id="toolbar"><span id="chickenFeet"><a href="d4648875-d41a-783b-d5f4-638df39ee413.htm">Namespaces</a> ► <span class="selflink">com.latencybusters.lbm</span></span><span id="languageFilter"><select id="languageSelector" onchange="var names = this.value.split(' '); toggleVisibleLanguage(names[1]); lfc.switchLanguage(names[0]); store.set('lang',this.value); store.save();" style="visibility: hidden;"><option value="CSharp cs">C#</option></select></span></div></div><div id="main"><span style="color: DarkGray"> </span><div class="summary">LBM Classes</div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img src="../icons/collapse_all.gif" /> Declaration Syntax</div><div class="sectionContent"><div id="syntaxSection"><table class="filter"><tr class="tabs" id="syntaxTabs"><td class="tab" x-lang="CSharp" onclick="toggleClass('syntaxTabs','x-lang','CSharp','activeTab','tab'); toggleStyle('syntaxBlocks','x-lang','CSharp','display','block','none');">C#</td></tr></table><div id="syntaxBlocks"><div class="code" x-lang="CSharp"><pre><span class="keyword">namespace</span> <span class="identifier">com.latencybusters.lbm</span></pre></div></div></div></div></div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img src="../icons/collapse_all.gif" /> Types</div><div class="sectionContent"><div id="typeSection"><table class="filter"><tr class="tabs" id="typeFilter"><td class="tab" value="all" onclick="toggleClass('typeFilter','value','all','activeTab','tab'); processSubgroup('all', 'type'); processList('typeList','filterElement', 'type');">All Types</td><td class="tab" value="class" onclick="toggleClass('typeFilter','value','class','activeTab','tab'); processSubgroup('class', 'type'); processList('typeList','filterElement','type');">Classes</td><td class="tab" value="structure" onclick="toggleClass('typeFilter','value','structure','activeTab','tab'); processSubgroup('structure', 'type'); processList('typeList','filterElement','type');">Structures</td><td class="tab" value="delegate" onclick="toggleClass('typeFilter','value','delegate','activeTab','tab'); processSubgroup('delegate', 'type'); processList('typeList','filterElement','type');">Delegates</td></tr></table><table id="typeList" class="members"><tr><th class="iconColumn">Icon</th><th class="nameColumn">Type</th><th class="descriptionColumn">Description</th></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="51a63feb-ba2d-52e4-3f25-f48cc76a0e81.htm">JMSMessageId</a></b></td><td><div class="summary"> JMSMessageID class.
            This object creates a JMSMessageId.
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="6cb9b71c-b95d-1e15-aa22-e25ea8ca8b2a.htm">LBM</a></b></td><td><div class="summary">
            LBM Utility class.
            </div><br /></td></tr><tr data="structure; public"><td><img src="../icons/pubstructure.gif" /></td><td><b><a href="01096169-babc-f028-b74d-89dc10471e29.htm">LBMConfigOption</a></b></td><td><div class="summary">
            LBM Option class
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="f8e2a860-612c-3501-0dcf-5012eba162f4.htm">LBMContext</a></b></td><td><div class="summary">
            Creates an LBM context.
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="f231cd8d-c7a7-1bbd-8a8a-3704b222a73f.htm">LBMContextAttributes</a></b></td><td><div class="summary">
            Encapsulates the set of default LBM context attributes.
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="6ec7eb74-412e-0949-b001-c1e3ba197e7d.htm">LBMContextEvent</a></b></td><td><div class="summary">Encapsulates LBM Context Events</div><br /></td></tr><tr data="delegate; public"><td><img src="../icons/pubdelegate.gif" /></td><td><b><a href="498a51c4-543e-ad8b-3249-2960b5f7102c.htm">LBMContextEventCallback</a></b></td><td><div class="summary">Context event callback.</div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="67da2cd5-ee04-2088-874d-d3d93c375050.htm">LBMContextSourceEvent</a></b></td><td><div class="summary">
            Encapsulates an LBM context-level source event.
            </div><br /></td></tr><tr data="delegate; public"><td><img src="../icons/pubdelegate.gif" /></td><td><b><a href="c89b2660-23e5-0bbf-4aea-0de90ddd1538.htm">LBMContextSourceEventCallback</a></b></td><td><div class="summary">
            Context source event callback delegate
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="c417b6ab-d653-4ed9-1fc9-1399ba235038.htm">LBMContextStatistics</a></b></td><td><div class="summary">
            LBM Context Statistics
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="125b486f-cfa3-d620-420b-b8263d01e113.htm">LBMEInvalException</a></b></td><td><div class="summary">
            LBM Invalid value exception class
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="0c328ffa-4bdf-2fec-d594-1f36744034e3.htm">LBMEMessageSelectorException</a></b></td><td><div class="summary">
            LBM message selector exception class
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="e246ceea-38c9-a6ec-d4ed-b5d795745b0b.htm">LBMENoMemException</a></b></td><td><div class="summary">
            LBM memory allocation exception class
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="65e3504c-99b5-46e2-3e3c-8e22d1dbed55.htm">LBMEOPException</a></b></td><td><div class="summary">
            LBM internal processing exception class
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="a5cc6969-fb49-837d-20f0-7d647553aa11.htm">LBMEOSException</a></b></td><td><div class="summary">
            LBM unrecoverable OS system call exception class
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="6db5174f-2a84-af30-2b08-4eccf7f0e4df.htm">LBMETimedOutException</a></b></td><td><div class="summary">
            LBM timed out operation exception class
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="96c03f4a-6256-ce1a-0987-4ab5cf3aac30.htm">LBMEventQueue</a></b></td><td><div class="summary">
            LBM Event Queue class.  This class may be subclassed to override the default
            event queue monitoring method or an LBMEventQueueCallback interface may be
            specified to handle the monitor callback.
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="e20087c7-1b77-fb51-9b04-12f42ace2a8d.htm">LBMEventQueueAttributes</a></b></td><td><div class="summary">
            Encapsulates the set of default LBM event queue attributes
            </div><br /></td></tr><tr data="delegate; public"><td><img src="../icons/pubdelegate.gif" /></td><td><b><a href="5a3eee8b-e6ee-81fe-06ad-fae302ba162e.htm">LBMEventQueueCallback</a></b></td><td><div class="summary">
            Event queue callback delegate
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="8eaea94b-22a0-4a23-7f00-2d8e0651d637.htm">LBMEventQueueStatistics</a></b></td><td><div class="summary">
            UM event queue statistics. These are 
            statistics for messages and other events that enter and exit
            the event queue. NOTE: Specific count-enable options must sometimes be enabled for
            these statistics to populate.
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="79f36b8e-9cea-0253-1003-36f922442894.htm">LBMEWouldBlockException</a></b></td><td><div class="summary">
            LBM blocked operation exception class (occurs when a function that would otherwise block is set
            to be nonblocking)
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="cf7de82c-3ae4-08c6-5292-9a2d7dc0d84d.htm">LBMException</a></b></td><td><div class="summary">
            Base LBM Exception class
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="0186748f-1ddb-f508-ab89-a8cf6573bedf.htm">LBMHFX</a></b></td><td><div class="summary">
            Creates an LBM HFX object.
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="315b0b37-3242-3ca4-8af2-91b8dcf904bf.htm">LBMHFXAttributes</a></b></td><td><div class="summary">
            Encapsulates the set of default LBM HFX attributes
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="19f06db6-97f9-38a1-95ef-4ea438773357.htm">LBMHFXReceiver</a></b></td><td><div class="summary">
            The LBMHFXReceiver object is used to associate an LBMHFX object with an LBMContext.  Messages are delivered by each LBMHFXReceiver to the LBMHFX object, which handles dropping duplicates and ordering messages.
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="07e3837a-8cf4-386b-6d27-bb9713e36f7d.htm">LBMHotFailoverReceiver</a></b></td><td><div class="summary">
            LBM Hot-Failover Receiver class.
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="03e73f92-fe72-5be9-4be5-6aa7ec4a3f2e.htm">LBMHotFailoverSource</a></b></td><td><div class="summary">
            LBM Hot-Failover Source class.
            </div><br /></td></tr><tr data="delegate; public"><td><img src="../icons/pubdelegate.gif" /></td><td><b><a href="32bd76be-2d7c-86a8-c579-d88351064dd4.htm">LBMImmediateMessageCallback</a></b></td><td><div class="summary">
            Received immediate message callback delegate.
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="2d0e436b-87e2-aacd-033b-4af347f57985.htm">LBMImmediateMessageReceiverStatistics</a></b></td><td><div class="summary">
            UM Receiver Transport Statistics
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="7067f90b-0238-058c-9d43-82f2857675f6.htm">LBMImmediateMessageSourceStatistics</a></b></td><td><div class="summary">
            UM context immediate message source transport statistics.
            </div><br /></td></tr><tr data="delegate; public"><td><img src="../icons/pubdelegate.gif" /></td><td><b><a href="f220bff8-147c-cb66-b245-c734e1f6a765.htm">LBMLogging</a></b></td><td><div class="summary">
             LBM logging callback delegate
             </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="76efb44a-dc57-b7bc-b916-37d41144adc4.htm">LBMMessage</a></b></td><td><div class="summary">
        <p>
            Encapsulates all LBM messages.
            </p>
        <p>
            Call dispose() to utilize Zero Object Delivery (ZOD), or promote() to retain message object after callback.
            You must call either one or the other.
            </p>
        <p>
            When using ZOD (Zero Object Delivery), access message data via dataPointer() and length().
            (For more information on ZOD, see Zero Object Delivery (ZOD)
            and Java API Overview.)
            </p>
        <p>
            For object-based delivery (non-ZOD), access message data with data(), which creates a byte array object that
            contains the message data.
            </p>
      </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="977deb35-5102-8854-7eb5-3044c310360a.htm">LBMMessageChannelInfo</a></b></td><td><div class="summary">
            Encapsulates information about channel data send with a message
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="ff1bf646-7121-1765-3e20-4f2ea63417fd.htm">LBMMessageProperties</a></b></td><td><div class="summary">
            Represents a collection of properties contained in an LBMMessage object.
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="0959552d-b433-665a-cd49-a691ee90a052.htm">LBMMessageProperty</a></b></td><td><div class="summary">
            Represents a key-value pair included with an LBMMessage object.
            </div><br /></td></tr><tr data="delegate; public"><td><img src="../icons/pubdelegate.gif" /></td><td><b><a href="99edcb7b-bc36-20da-fe60-3e7cdd1811e3.htm">LBMMessageReclamationCallback</a></b></td><td><div class="summary">
            Forced message reclamation callback delegate (UME only).
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="40dbd649-7e32-10dc-1261-4169f9a01f17.htm">LBMMonitor</a></b></td><td><div class="summary">
            LBM Monitor class
            </div><br /></td></tr><tr data="delegate; public"><td><img src="../icons/pubdelegate.gif" /></td><td><b><a href="75e900e7-bdcf-231d-b0b1-fb6b6f1d0749.htm">LBMMonitorContextStatisticsCallback</a></b></td><td><div class="summary">
            Received context statistics callback delegate
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="389d2b36-2018-5d0d-7f69-44a41af24e1d.htm">LBMMonitorEAgainException</a></b></td><td><div class="summary">
            LBM Monitor insufficient resources exception class
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="8d8494bb-3a4c-a3dc-c2ec-cceed45e9eb6.htm">LBMMonitorEAlreadyException</a></b></td><td><div class="summary">
            LBM Monitor resource already registered exception class
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="6535a8e5-1c97-f1b0-5a54-f6a2829578ea.htm">LBMMonitorEInvalException</a></b></td><td><div class="summary">
            LBM Monitor invalid value exception class
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="81418fb7-1d28-532c-29fe-e3892d541973.htm">LBMMonitorELBMFailException</a></b></td><td><div class="summary">
            LBM Monitor LBM failure exception class
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="21b9260f-bc47-0847-31dc-79765c7a0292.htm">LBMMonitorEModFailException</a></b></td><td><div class="summary">
            LBM Monitor module function failure exception class
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="8d47fa2a-016f-84b4-3463-7a40dedfedc2.htm">LBMMonitorENoMemException</a></b></td><td><div class="summary">
            LBM Monitor out-of-memory exception class
            </div><br /></td></tr><tr data="delegate; public"><td><img src="../icons/pubdelegate.gif" /></td><td><b><a href="8bfea13f-7b2f-363e-e8f1-649edda20307.htm">LBMMonitorEventQueueStatisticsCallback</a></b></td><td><div class="summary">
            Received event queue statistics callback delegate
            </div><br /></td></tr><tr data="delegate; public"><td><img src="../icons/pubdelegate.gif" /></td><td><b><a href="c10b9a46-e790-5cca-859d-fed0370f7c12.htm">LBMMonitorImmediateMessageReceiverStatisticsCallback</a></b></td><td><div class="summary">
            Received immediate message receiver statistics callback delegate.
            </div><br /></td></tr><tr data="delegate; public"><td><img src="../icons/pubdelegate.gif" /></td><td><b><a href="0bc3b24c-8b0b-040d-aa01-b8115b89cde2.htm">LBMMonitorImmediateMessageSourceStatisticsCallback</a></b></td><td><div class="summary">
            Received immediate message source statistics callback delegate.
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="aad4110d-65f6-87d3-e830-0b18faaedd70.htm">LBMMonitorReceiver</a></b></td><td><div class="summary">
            LBM Monitor Receiver class.
            </div><br /></td></tr><tr data="delegate; public"><td><img src="../icons/pubdelegate.gif" /></td><td><b><a href="63ea7ef1-6066-58ec-cf07-71471bf046a3.htm">LBMMonitorReceiverStatisticsCallback</a></b></td><td><div class="summary">
            Received receiver statistics callback delegate
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="24094721-732e-f032-95af-b78c11ad129e.htm">LBMMonitorSource</a></b></td><td><div class="summary">
            LBM Monitor Source class.
            </div><br /></td></tr><tr data="delegate; public"><td><img src="../icons/pubdelegate.gif" /></td><td><b><a href="e6a9683f-c2bb-08ec-30c6-76efec9b0cf7.htm">LBMMonitorSourceStatisticsCallback</a></b></td><td><div class="summary">
            Received source statistics callback delegate
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="a14d271c-2598-5112-665b-53c96fc2b246.htm">LBMObjectRecycler</a></b></td><td><div class="summary">
            Basic implementation of an object recycler that implements all supported LBM object types.
            The size limits for the object pools for each object type can be tuned and should be set
            immediately after instantiating the class and before using any instance of the class.
            This implementation is synchronized on a per object type basis(doneWithMessage/retrieveMessage,
            doneWithReceiverStatistics/retrieveReceiverStatistics, etc) via a thread local pool of objects
            and a synchronized shared pool of objects.
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="451244e2-bc2a-b1cf-11d1-4d087f4ffc8b.htm">LBMObjectRecyclerBase</a></b></td><td><div class="summary">
        <p>
            This is an abstract base class, and should be subclassed to override any appropriate
            non-functional methods, such as doneWith... or retrieve... (whose default implementation in
            the base class is to always return null). LBMObjectRecycler is provided as a basic general
            implementation of this class.
            </p>
        <p>
            After being set in any of the UM attribute classes with the setObjectRecycler() method, UM
            uses the LBMObjectRecyclerBase internally, instead of automatically creating a new Object of
            the different supported types.
            </p>
        <p>
            UM calls the appropriate retrieve method expecting either an object that it can use, or
            null. In the latter case UM creates the new object as if there were no recycler available.
            Once finished with an object, calling the appropriate doneWith method makes it available for
            future retrieve calls.
            </p>
        <p>
            When implementing your own recycler from this parent class, note that the retrieve methods
            (below) are called from within the context thread as part of the callbacks. Hence, do not
            perform any unsafe API calls from within a retrieve method.
            </p>
      </div><br /></td></tr><tr data="delegate; public"><td><img src="../icons/pubdelegate.gif" /></td><td><b><a href="fdaa392c-8fd1-abac-3902-fcc8c5e590e2.htm">LBMOperationCompleteCallback<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span></span>LBMOperationComplete</a></b></td><td><div class="summary">
            Operation Complete delegate.  A method matching this delegate may be
            passed to the LBMOperationCompleteCallback constructor if a simple
            callback is desired when an operation is complete.
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="bae6afdf-2f0b-ca2b-4666-abe86fc06775.htm">LBMOperationCompleteCallback</a></b></td><td><div class="summary">
            LBMOperationCompleteCallback class.
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="d8009f33-7443-5f2b-f8b5-140acbde4278.htm">LBMReceiver</a></b></td><td><div class="summary">
            LBM Receiver class.
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="ee3bc81f-ab1d-c1e9-b1df-41c3434d136b.htm">LBMReceiverAttributes</a></b></td><td><div class="summary">
            Encapsulates the set of default LBM receiver attributes
            </div><br /></td></tr><tr data="delegate; public"><td><img src="../icons/pubdelegate.gif" /></td><td><b><a href="1fca52df-6c69-8499-fb65-9a10baee4cfa.htm">LBMReceiverCallback</a></b></td><td><div class="summary">
            Received message callback delegate
            </div><br /></td></tr><tr data="delegate; public"><td><img src="../icons/pubdelegate.gif" /></td><td><b><a href="a2b98155-0278-76d2-9a1f-8011eef5065a.htm">LBMReceiverCreationCallback</a></b></td><td><div class="summary">
            Application callback for notification of creation of a receiver for a topic.
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="da7fc33d-5845-4414-511c-c5603096d4ab.htm">LBMReceiverStatistics</a></b></td><td><div class="summary">
            LBM Receiver Transport Statistics
            </div><br /></td></tr><tr data="delegate; public"><td><img src="../icons/pubdelegate.gif" /></td><td><b><a href="4bb4bc5a-881d-d38a-61f5-c53805749496.htm">LBMRegistrationIdCallback</a></b></td><td><div class="summary">
            Receiver registration ID callback delegate (UME only)
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="7735b721-7f7e-8510-1d64-3312670f6dd8.htm">LBMRequest</a></b></td><td><div class="summary">
            LBM Request class
            </div><br /></td></tr><tr data="delegate; public"><td><img src="../icons/pubdelegate.gif" /></td><td><b><a href="a3fa8811-1b14-3731-89af-950e932605b3.htm">LBMResponseCallback</a></b></td><td><div class="summary">
            Request response callback delegate
            </div><br /></td></tr><tr data="delegate; public"><td><img src="../icons/pubdelegate.gif" /></td><td><b><a href="dd25e589-0761-8cb6-1ede-24aea158e588.htm">LBMSetInflightCallback</a></b></td><td><div class="summary">
            Callback for setting the inflight messages for a source.
            </div><br /></td></tr><tr data="delegate; public"><td><img src="../icons/pubdelegate.gif" /></td><td><b><a href="c2af87b5-9903-a953-5dbe-46a5d2fae0ea.htm">LBMSetInflightCallbackEx</a></b></td><td><div class="summary">
            Callback for setting the number of inflight messages and bytes for a source simultaneously.
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="4a7e9bd6-89b8-65cd-7433-b0d2407d3c78.htm">LBMSource</a></b></td><td><div class="summary">
            LBM Source class.
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="b561d5fd-ab92-4e17-07c8-5030b6ab62cb.htm">LBMSourceAttributes</a></b></td><td><div class="summary">
            Encapsulates the set of default LBM source attributes
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="06358e0a-26db-d06a-046b-ac484d5a17f0.htm">LBMSourceChannelInfo</a></b></td><td><div class="summary">
            LBM Source Channel Info class.
            </div><br /></td></tr><tr data="delegate; public"><td><img src="../icons/pubdelegate.gif" /></td><td><b><a href="d515bdb5-5786-5c95-c625-f31afb5620fc.htm">LBMSourceCostCallback</a></b></td><td><div class="summary">
            Application callback to evaluate the cost of a newly discovered source.  Set via the context attributes
            setSourceCostCallback function.
            </div><br /></td></tr><tr data="delegate; public"><td><img src="../icons/pubdelegate.gif" /></td><td><b><a href="b1553181-1a9c-3a62-57cf-cd2437646149.htm">LBMSourceCreationCallback</a></b></td><td><div class="summary">
            Application callback for notification of creation of sources for a topic.
            </div><br /></td></tr><tr data="delegate; public"><td><img src="../icons/pubdelegate.gif" /></td><td><b><a href="9c8546f2-fcc8-3d0c-47f3-8a257953906a.htm">LBMSourceDeletionCallback</a></b></td><td><div class="summary">
            Application callback for notification of deletion of sources for a topic.
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="c9563dce-7f64-7288-2b8b-dd45f967d050.htm">LBMSourceEvent</a></b></td><td><div class="summary">
            Encapsulates LBM Source Events.
            </div><br /></td></tr><tr data="delegate; public"><td><img src="../icons/pubdelegate.gif" /></td><td><b><a href="7ad20f83-b3aa-a1bf-8e0a-c1ad4cb9dc5b.htm">LBMSourceEventCallback</a></b></td><td><div class="summary">
            Source event callback delegate
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="88f672b2-bd10-9fe2-7a7e-1fb0b591a96f.htm">LBMSourceEventFlightSizeNotification</a></b></td><td><div class="summary"> LBM Source Event Flight Size Notification class.
            Contains type and state of current flight size
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="a6a47a1b-62f8-b5f2-403d-75b7b66b7e0f.htm">LBMSourceEventSequenceNumberInfo</a></b></td><td><div class="summary">
            LBM Source Event Sequence Number Info class.
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="331c3684-588b-c659-fc5a-b2d733a4f78a.htm">LBMSourceEventWakeupInfo</a></b></td><td><div class="summary">
            Class containing information about a source wakeup event.
            </div><br /></td></tr><tr data="delegate; public"><td><img src="../icons/pubdelegate.gif" /></td><td><b><a href="0e409cf5-378a-af01-b749-8ea289928d91.htm">LBMSourceNotification</a></b></td><td><div class="summary">
            New source notification callback delegate
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="7480c550-d87f-42a3-b0f1-d795cccfdbf8.htm">LBMSourceSendExInfo</a></b></td><td><div class="summary">
            LBM Source Send Extended Info class.
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="77bdcc45-2866-ffb7-b07c-b0ee0a70c72e.htm">LBMSourceStatistics</a></b></td><td><div class="summary">
            LBM Source Transport Statistics
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="3f9a488b-c9b3-16b1-383d-3934734334d1.htm">LBMStatistics</a></b></td><td><div class="summary">
            UM Transport Statistics base class
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="de92e30e-6b1c-64ca-951c-ef792cd661c8.htm">LBMTimer</a></b></td><td><div class="summary">
            LBM Timer class
            </div><br /></td></tr><tr data="delegate; public"><td><img src="../icons/pubdelegate.gif" /></td><td><b><a href="7d350933-6ac0-55ef-f98c-2bd37c9b2365.htm">LBMTimerCallback</a></b></td><td><div class="summary">
            LBM Timer callback delegate
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="2ace7d1f-1076-45c1-80ee-d4051470bad2.htm">LBMTopic</a></b></td><td><div class="summary">
            LBM Topic class.
            It is recommended that topic objects be instantiated from the context
            factory methods <a href="eff7d793-60ae-2620-004d-0f19d06c55bd.htm">allocTopic()</a>
            and <a href="0b7c13bc-d818-b562-14b8-4e0d5a23fcfc.htm">lookupTopic()</a> (for
            sources and receivers respectively).
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="708ce1d5-b049-a025-e2a8-20aafb47ffe4.htm">LBMTransportSourceInfo</a></b></td><td><div class="summary">
            Class that is passed to the source cost callback with source transport information.
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="c7340f7d-3fa9-d852-baa7-94e6a06b09c7.htm">LBMUMMInfo</a></b></td><td><div class="summary">
            LBM UMM options class.
            </div><br /></td></tr><tr data="delegate; public"><td><img src="../icons/pubdelegate.gif" /></td><td><b><a href="9ebf46bc-4c33-4505-721e-9873329d30e8.htm">LBMWildcardPatternCallback</a></b></td><td><div class="summary">
            LBM wildcard pattern match callback delegate
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="8e4c1ebc-c5a8-0eb5-b48e-a3691980b30e.htm">LBMWildcardReceiver</a></b></td><td><div class="summary">
            LBM Wildcard Receiver class
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="a7734457-0634-e778-61c1-aad301ecee03.htm">LBMWildcardReceiverAttributes</a></b></td><td><div class="summary">
            Encapsulates the set of default LBM wildcard receiver attributes
            </div><br /></td></tr><tr data="delegate; public"><td><img src="../icons/pubdelegate.gif" /></td><td><b><a href="0b21a038-300e-feb2-784c-7030ce1a2b4a.htm">LBMWildcardReceiverCreateCallback</a></b></td><td><div class="summary">
            LBM wildcard receiver create callback delegate
            </div><br /></td></tr><tr data="delegate; public"><td><img src="../icons/pubdelegate.gif" /></td><td><b><a href="d40faaad-924f-b86f-b74c-acde1342f97f.htm">LBMWildcardReceiverDeleteCallback</a></b></td><td><div class="summary">
            LBM wildcard receiver delete callback delegate
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="0d87b83c-1280-903c-5c71-d2ec32894e57.htm">UMEDeregistrationCompleteInfo</a></b></td><td><div class="summary">
            UME Deregistration Complete Info class.
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="a5c50e05-6128-9362-2673-07280df4c90d.htm">UMEDeregistrationSuccessInfo</a></b></td><td><div class="summary">
            UME Deregistration Success Info class.
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="ff62b6bf-cc7f-ec1d-d61e-46d2f128b924.htm">UMEMessageAck</a></b></td><td><div class="summary">
            UMEMessageAck class.  Use this object to send explicit acks.
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="aa6d5043-5655-2da0-f94b-44ca4fbadef4.htm">UMENoQueueException</a></b></td><td><div class="summary">
            UME registration incomplete exception class
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="32f3310f-26fc-65cc-f0d8-ed2408d521d6.htm">UMENoRegException</a></b></td><td><div class="summary">
            UME registration incomplete exception class
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="cea29ed4-6729-6b85-587e-c977e049a376.htm">UMENoStoreException</a></b></td><td><div class="summary">
            UME registration incomplete exception class
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="3cf9c577-76f9-44c6-7e2b-45a5ff9a4e92.htm">UMEReceiverLivenessCallbackInfo</a></b></td><td><div class="summary">
            Class that is passed to the receiver liveness creation and deletion callback with receiver information.
            </div><br /></td></tr><tr data="delegate; public"><td><img src="../icons/pubdelegate.gif" /></td><td><b><a href="b6695b78-0a26-5e24-37f6-082676ab2853.htm">UMEReceiverLivenessCreationCallback</a></b></td><td><div class="summary">
            Application callback to attain information about a new "connected" receiver.
            </div><br /></td></tr><tr data="delegate; public"><td><img src="../icons/pubdelegate.gif" /></td><td><b><a href="6bc5473c-73a5-ee63-b290-558d258d5997.htm">UMEReceiverLivenessDeletionCallback</a></b></td><td><div class="summary">
            Application callback to attain information about a previously "connected" receiver that has gone away.
            </div><br /></td></tr><tr data="delegate; public"><td><img src="../icons/pubdelegate.gif" /></td><td><b><a href="4b7bd368-a40d-a9c1-f81f-eb12e30dad0d.htm">UMERecoverySequenceNumberCallback</a></b></td><td><div class="summary">
            Receiver recovery sequence number callback delegate
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="c2cfbafb-6b96-ae4b-ad80-d72b8f4b9eeb.htm">UMERecoverySequenceNumberCallbackInfo</a></b></td><td><div class="summary">
            UME Recovery sequence number callback info class.
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="f29b0615-3575-2e8b-8447-bb7308d7a526.htm">UMERegistrationCompleteInfo</a></b></td><td><div class="summary">
            UME Registration Complete Info class.
            </div><br /></td></tr><tr data="delegate; public"><td><img src="../icons/pubdelegate.gif" /></td><td><b><a href="33ef1315-52a9-e468-b64b-80f498b6c684.htm">UMERegistrationIdExCallback</a></b></td><td><div class="summary">
            Receiver registration ID callback delegate, extended version (UME only)
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="9358c3ad-2753-5e64-215c-8353c9d99d03.htm">UMERegistrationIdExCallbackInfo</a></b></td><td><div class="summary">
            UME Registration ID Extended Callback Info class.
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="f0757574-b596-ddc1-67f9-04dfff460ed3.htm">UMERegistrationSuccessInfo</a></b></td><td><div class="summary">
            UME Registration Success Info class.
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="ff37e611-f766-fa3f-bbd3-454a7968380d.htm">UMESourceEventAckInfo</a></b></td><td><div class="summary">
            UME Source Event Ack Info class.
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="af07ded7-2101-a80e-1a38-0287a5feb8d7.htm">UMESourceEventDeregistrationCompleteInfo</a></b></td><td><div class="summary">
            UME Source Event Deregistration Complete Info class.
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="931354f2-1fc0-fa21-66f8-4db481d26948.htm">UMESourceEventDeregistrationSuccessInfo</a></b></td><td><div class="summary">
            UME Source Event Deregistration Success Info class.
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="4718b695-c12c-5886-ca5c-406ebfb844f3.htm">UMESourceEventRegistrationCompleteInfo</a></b></td><td><div class="summary">
            UME Source Event Registration Complete Info class.
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="85e7ad5b-6223-d346-fb4e-cc1839201281.htm">UMESourceEventRegistrationSuccessInfo</a></b></td><td><div class="summary">
            UME Source Event Registration Success Info class.
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="c04ca102-c4cb-9e18-837b-44ea9058288b.htm">UMEStoreEntry</a></b></td><td><div class="summary">
            UME Store Entry class.
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="08615759-d6cd-9e8a-67ad-35fcabbce534.htm">UMEStoreGroupEntry</a></b></td><td><div class="summary">
            UME Store Group Entry class.
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="d141144d-5660-1352-8695-0f44d442cb52.htm">UMQContextEventRegistrationCompleteInfo</a></b></td><td><div class="summary"> 
            Class containing information about UMQ Registration Complete Context Events.
            This info object is delivered with a UMQ Registration Complete Context Event,
            containing information identifying the queue and registration id
            associated with the registration complete event.
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="78081fe4-5b76-5d4a-534d-f2c4d1442aff.htm">UMQContextEventRegistrationSuccessInfo</a></b></td><td><div class="summary"> Class containing information about UMQ Registration Success Context Events.
            This info object is delivered with a UMQ Registration Success Context Event,
            containing information identifying the queue, queue instance, and registration id
            associated with the registration success event.
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="cf039ae6-b033-4e60-0248-5d8f03ac33e8.htm">UMQDeregistrationCompleteInfo</a></b></td><td><div class="summary"> UMQ Deregistration Complete Info class.
            Contains extended information for UMQ receiver
            deregistration complete messages. This info object is supplied
            with a message indicating the a receiver has successfully 
            deregistered with a queue.
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="6f460b45-184b-9e4c-826f-a2f74cc5c527.htm">UMQIndexAssignedInfo</a></b></td><td><div class="summary"> Class containing information about UMQ index assignment events.
            This info object is delivered with a UMQ Index Assigned receiver event,
            containing information identifying the queue, queue instance, and index information
            associated with the index assigned event.
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="056ce6b1-9072-5750-c725-9dd6a7287c1e.htm">UMQIndexAssignmentEligibilityStartCompleteInfo</a></b></td><td><div class="summary"> UMQ Index Assignment Eligibility Start Complete Info class.
            Contains extended information for UMQ receiver
            index assignment eligibility start complete messages. This info object is supplied
            with a message indicating the a receiver is now eligible for new index assignments
            from a queue.
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="87d68feb-a55b-8d65-2f31-f7290a8a6145.htm">UMQIndexAssignmentEligibilityStopCompleteInfo</a></b></td><td><div class="summary"> UMQ Index Assignment Eligibility Stop Complete Info class.
            Contains extended information for UMQ receiver
            index assignment eligibility stop complete messages. This info object is supplied
            with a message indicating the a receiver is now no longer eligible for new index assignments
            from a queue.
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="b9423c5d-8fc7-90fd-839e-3278ab15bf86.htm">UMQIndexInfo</a></b></td><td><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="162e1871-3047-ac1c-707b-d41be3652cb8.htm">UMQIndexReleasedInfo</a></b></td><td><div class="summary"> Class containing information about UMQ index released events.
            This info object is delivered with a UMQ Index Released receiver event,
            containing information identifying the queue, queue instance, and index information
            associated with the index released event.
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="a7edffb9-5ca5-5587-952e-553ccd35bc0e.htm">UMQMessageId</a></b></td><td><div class="summary"> UMQ Message ID class.
            Contains information required to identify a UMQ message
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="7f9dbace-4ab5-f086-8180-b4c6069906a7.htm">UMQMessageTotalLifetimeInfo</a></b></td><td><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="b237a946-73f0-820a-e228-8ad4f8ea7a51.htm">UMQQueueIndexInfo</a></b></td><td><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="2e084d03-beda-217e-c357-76c153cf90b2.htm">UMQQueueInfo</a></b></td><td><div class="summary"> Base class for UMQ info objects associated with a queue.
            This class encapsulates the basic information required for
            any UMQ info object that is associated with a queue, 
            namely the identifying information for the queue (Id and Name) 
            and a set of flags to indicate other information contained in the object.
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="a88ba2b6-9c08-ed11-a459-2186f48bc4c4.htm">UMQQueueInstanceInfo</a></b></td><td><div class="summary"> Base class for UMQ info objects associated with a queue instance.
            This class encapsulates the information required for any UMQ
            info object that is associated with a queue instance.  This includes
            both the information required to identify the queue (Id and Name) as
            well as the information needed to identify the queue instance (Index 
            and Name).  
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="607c43ed-f8f9-55aa-d5b2-1b0ed96452e8.htm">UMQRegistrationCompleteInfo</a></b></td><td><div class="summary"> UMQ Registration Complete Info class.
            Contains extended information for UMQ receiver
            registration complete messages.
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="436d4655-29b2-98c2-ecb3-1ee4736f4b7a.htm">UMQSourceEventAckInfo</a></b></td><td><div class="summary"> UMQ Stability Ack Info class.
            This info object is delivered with a source event indicating that
            a message is stable (i.e. has been acknowledged by a queue instance).
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="0c9955e4-c241-c430-46c2-a74e37939f10.htm">UMQSourceEventMessageIdInfo</a></b></td><td><div class="summary"> This class encapsulates information about a message sent to a queue.
            An object of type UMQSourceEventMessageIdInfo will be delivered with
            a source event of type LBM.SRC_EVENT_UMQ_MESSAGE_ID_INFO to notify
            the application of the message id that has been assigned to the 
            message by the queue.
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="6cced70e-fd85-b9ca-dc2c-b8d013220a29.htm">UMQSourceEventRegistrationCompleteInfo</a></b></td><td><div class="summary"> UMQ Source Event Registration Complete Info class.
            This info object is delivered with a source event indicating that
            registration is complete to all involved queue instances.
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="ef9c7437-34ec-d8ef-3b8b-14e41aa56175.htm">UMQSourceEventULBMessageInfo</a></b></td><td><div class="summary"> UMQ ULB Message Info class.
            This info object is delivered with a source event indicating that
            a ULB message has been assigned, consumed, discarded, etc.
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="3e921e6c-bc94-2947-1632-fa99731a4c12.htm">UMQSourceEventULBReceiverInfo</a></b></td><td><div class="summary"> UMQ ULB Receiver Info class.
            This info object is both delivered with a source event and acts as
            a base class for other ULB source events. In both cases, this object
            holds information about a ULB receiver.
            </div><br /></td></tr></table></div></div></div><div id="footer">For questions or comments on this topic, contact http://29west.com/support <p />Copyright © 2006-2014 Informatica Corporation. All Rights Reserved.</div></div></body></html>