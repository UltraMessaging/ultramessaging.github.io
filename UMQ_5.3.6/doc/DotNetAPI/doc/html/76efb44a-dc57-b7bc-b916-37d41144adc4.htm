<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp"><head><title>LBMMessage Class</title><link rel="stylesheet" type="text/css" href="../styles/presentation.css" /><link rel="stylesheet" type="text/css" href="ms-help://Hx/HxRuntime/HxLink.css" /><script type="text/javascript" src="../scripts/script_prototype.js"> </script><script type="text/javascript" src="../scripts/EventUtilities.js"> </script><script type="text/javascript" src="../scripts/StyleUtilities.js"> </script><script type="text/javascript" src="../scripts/SplitScreen.js"> </script><script type="text/javascript" src="../scripts/ElementCollection.js"> </script><script type="text/javascript" src="../scripts/MemberFilter.js"> </script><script type="text/javascript" src="../scripts/CollapsibleSection.js"> </script><script type="text/javascript" src="../scripts/LanguageFilter.js"> </script><script type="text/javascript" src="../scripts/CookieDataStore.js"> </script><meta name="file" content="76efb44a-dc57-b7bc-b916-37d41144adc4" /><xml xmlns:msxsl="urn:schemas-microsoft-com:xslt"><MSHelp:Attr Name="AssetID" Value="T:com.latencybusters.lbm.LBMMessage" /><MSHelp:Keyword Index="A" Term="T:com.latencybusters.lbm.LBMMessage" /><MSHelp:Keyword Index="A" Term="frlrfcomlatencybusterslbmLBMMessageClassTopic" /><MSHelp:Keyword Index="A" Term="frlrfcomlatencybusterslbmLBMMessageMembersTopic" /><MSHelp:Keyword Index="K" Term="LBMMessage class" /><MSHelp:Keyword Index="K" Term="com.latencybusters.lbm.LBMMessage class" /><MSHelp:Keyword Index="F" Term="LBMMessage" /><MSHelp:Keyword Index="F" Term="com.latencybusters.lbm.LBMMessage" /><MSHelp:Attr Name="TopicType" Value="apiref" /><MSHelp:Attr Name="TopicType" Value="kbSyntax" /><MSHelp:Attr Name="APIType" Value="Managed" /><MSHelp:Attr Name="APILocation" Value="lbmcs.dll" /><MSHelp:Attr Name="APIName" Value="com.latencybusters.lbm.LBMMessage" /><MSHelp:Attr Name="Locale" Value="en-us" /></xml></head><body><div id="control"><span class="productTitle">LBM .Net API Documentation</span><br /><span class="topicTitle">LBMMessage Class</span><br /><div id="toolbar"><span id="chickenFeet"><a href="d4648875-d41a-783b-d5f4-638df39ee413.htm">Namespaces</a> ► <a href="687c4e76-c213-64c0-1151-0f7002f4ca91.htm">com.latencybusters.lbm</a> ► <span class="selflink">LBMMessage</span></span><span id="languageFilter"><select id="languageSelector" onchange="var names = this.value.split(' '); toggleVisibleLanguage(names[1]); lfc.switchLanguage(names[0]); store.set('lang',this.value); store.save();" style="visibility: hidden;"><option value="CSharp cs">C#</option></select></span></div></div><div id="main"><span style="color: DarkGray"> </span><div class="summary">
        <p>
            Encapsulates all LBM messages.
            </p>
        <p>
            Call dispose() to utilize Zero Object Delivery (ZOD), or promote() to retain message object after callback.
            You must call either one or the other.
            </p>
        <p>
            When using ZOD (Zero Object Delivery), access message data via dataPointer() and length().
            (For more information on ZOD, see Zero Object Delivery (ZOD)
            and Java API Overview.)
            </p>
        <p>
            For object-based delivery (non-ZOD), access message data with data(), which creates a byte array object that
            contains the message data.
            </p>
      </div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img src="../icons/collapse_all.gif" /> Declaration Syntax</div><div class="sectionContent"><div id="syntaxSection"><table class="filter"><tr class="tabs" id="syntaxTabs"><td class="tab" x-lang="CSharp" onclick="toggleClass('syntaxTabs','x-lang','CSharp','activeTab','tab'); toggleStyle('syntaxBlocks','x-lang','CSharp','display','block','none');">C#</td></tr></table><div id="syntaxBlocks"><div class="code" x-lang="CSharp"><pre><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">LBMMessage</span> : <a href="http://msdn2.microsoft.com/en-us/library/aax125c9" target="_blank">IDisposable</a></pre></div></div></div></div></div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img src="../icons/collapse_all.gif" /> Members</div><div class="sectionContent"><div id="allMembersSection"><table class="filter"><tr class="tabs" id="memberTabs"><td class="tab" value="all" onclick="toggleClass('memberTabs','value','all','activeTab','tab'); processSubgroup('all', 'member'); processList('memberList','filterElement','member');">All Members</td><td class="tab" value="constructor" onclick="toggleClass('memberTabs','value','constructor','activeTab','tab'); processSubgroup('constructor','member');processList('memberList','filterElement','member');">Constructors</td><td class="tab" value="method" onclick="toggleClass('memberTabs','value','method','activeTab','tab'); processSubgroup('method','member'); processList('memberList','filterElement','member');">Methods</td></tr><tr><td class="line" colspan="2"><label for="public"><input id="public" type="checkbox" checked="true" onclick="toggleCheckState('public',this.checked); processList('memberList','filterElement','member');" />Public</label><br /><label for="protected"><input id="protected" type="checkbox" checked="true" onclick="toggleCheckState('protected',this.checked); processList('memberList','filterElement','member');" />Protected</label></td><td class="line" colspan="2"><label for="instance"><input id="instance" type="checkbox" checked="true" onclick="toggleCheckState('instance',this.checked); processList('memberList','filterElement','member');" />Instance</label><br /><label for="static"><input id="static" type="checkbox" checked="true" onclick="toggleCheckState('static',this.checked); processList('memberList','filterElement','member');" />Static</label></td><td class="line" colspan="2"><label for="declared"><input id="declared" type="checkbox" checked="true" onclick="toggleCheckState('declared',this.checked); processList('memberList','filterElement','member');" />Declared</label><br /><label for="inherited"><input id="inherited" type="checkbox" checked="true" onclick="toggleCheckState('inherited',this.checked); processList('memberList','filterElement','member');" />Inherited</label></td></tr></table><table class="members" id="memberList"><tr><th class="iconColumn">Icon</th><th class="nameColumn">Member</th><th class="descriptionColumn">Description</th></tr><tr data="constructor; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="5e2fed86-cb8c-e1c8-21b6-a05089faedab.htm">LBMMessage<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">Initializes a new instance of the <span class="selflink">LBMMessage</span> class</div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="6955dd21-0814-3142-868f-c1b9870fd3e1.htm">canSendExplicitAck<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Determine whether an explicit ACK can be used on this  message (UME).
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="1d3f82a2-483a-487b-b5ff-94f4c0426c2d.htm">channelInfo<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Holds information about any channel information included with the message.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="52db8b12-663c-aeb1-6d80-dd78b8158401.htm">data<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Message data.  Calling this method causes the data to be copied to a
            new byte array.  For better performance, use the dataPointer() method
            to access the data directly.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="6075de41-1a99-96fe-e315-7408df286482.htm">dataPointer<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Pointer to the beginning of the unmanaged data buffer for this message. For ZOD, use in conjunction with
            length() to determine how many bytes in the buffer are actually valid.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="259356e8-1bc0-7b36-23fe-afd29df97c06.htm">dataString<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Message string data. Calling this method causes the data to be copied to a
            new byte array.  For better performance, use the dataPointer() method
            to access the data directly.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="2dd263e2-a7a0-217b-7b69-0b0d9aea77f5.htm">deregistrationCompleteInfo<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Get an extended deregistration complete info object from the message
            (only for LBM.MSG_UME_DEREGISTRATION_COMPLETE_EX messages).
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="4397fd48-7e38-d192-28e0-48dbc2f15a65.htm">deregistrationSuccessInfo<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Get an extended deregistration success info object from the message (only for
            LBM.MSG_UME_DEREGISTRATION_SUCCESS_EX messages).
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="e273307a-31ca-b793-9719-53c5bf43edd0.htm">dispose<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Dispose of this message immediately (same as Dispose())
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="67edadb4-02ea-7385-1fbd-99b517459edf.htm">Dispose<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Dispose of this message immediately
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="f541290e-6c4b-82f0-8abb-b0a38c13d4d7.htm">extractUMEAck<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Retrieves the ack structure from a UME message.
            </div><br /></td></tr><tr data="method; protected; instance; declared"><td><img src="../icons/protmethod.gif" /></td><td><a href="089f89dd-acb7-f0f7-4ba8-e8cb2f558fc4.htm">Finalize<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            LBMMessage finalization
            </div> (Overrides <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.<a href="http://msdn2.microsoft.com/en-us/library/4k87zsw7" target="_blank">Finalize<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a>.)<br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="5ccbbea3-b57f-c764-669e-97ff991917a3.htm">firstFragmentSequenceNumber<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            LBM sequence number of the first fragment of the current message
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="c9151615-2425-7dde-6cc4-31daba315741.htm">flags<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            LBM message flags
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="df7f36fe-97d6-9c5e-84d7-7e759e54a09a.htm">fragmentOffset<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Byte offset of the current fragment within the associated message
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="a398d654-7c66-f21a-61d5-e07c218c476e.htm">hfSequenceNumber32<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Get the 32 bit hot failover sequence number. 
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="de998614-49ce-f223-d5ea-26c5c49584fb.htm">hfSequenceNumber64<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Get the 64 bit hot failover sequence number.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="2e9336d9-6ce5-0eb8-6fc8-a7ec81b2e4be.htm">isFragment<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Returns true if the current object is actually a message fragment
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="781ae9d1-8307-3166-5d08-f90c146fd1af.htm">isFromGateway<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td> <span class="obsolete">Obsolete.</span><div class="summary">
            Whether or not the message arrived via a gateway.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="272250d4-eab6-46db-b181-2b511a058274.htm">length<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Message data length. For ZOD, use this in conjunction with dataPointer().
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="dc25b1f0-2353-740d-03ed-858fc131d5aa.htm">originalSequenceNumber<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td> <span class="obsolete">Obsolete.</span><div class="summary">
            Original sequence number (if the message arrived via a gateway).
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="e16a45a9-7b9a-9cac-2c9c-39ddded932f4.htm">originalSource<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td> <span class="obsolete">Obsolete.</span><div class="summary">
            Original message source (if the message arrived via a gateway).
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="53e261b5-c77c-ac87-45b0-886b1be572d8.htm">originalSourceAsCharArray<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td> <span class="obsolete">Obsolete.</span><div class="summary">
            Original message source (if the message arrived via a gateway)
            as character array
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="5bdc6200-7675-996e-8784-654224d03c2d.htm">osqn<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Get the original message sequence number set by the UM library. 
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="80912b13-d9f3-1962-0bac-0f5a2e0a4863.htm">promote<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Use to continue processing the message on another thread, or after the callback returns. (Note: If the
            application does not call promote or dispose, UM promotes the object by default. However, for valid
            coding, you must call one or the other.)
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="32d34743-1186-b3e1-3f4f-334fadc2d1b2.htm">properties<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Retrieve the properties associated with this message.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="3cf72dfe-edfb-8299-3013-8c4c936ee69f.htm">queueDeregistrationCompleteInfo<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Get an extended queue deregistration complete info object from the message
            (only for LBM.MSG_UMQ_DEREGISTRATION_COMPLETE_EX messages).
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="e84f9483-b8d5-6bac-9be3-4d140daaff58.htm">queueIndexAssignedInfo<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">Get a queue index assigned info object from the message
            only for LBM.MSG_UMQ_INDEX_ASSIGNED_EX messages).</div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="7e6334e4-ede4-5333-63d3-e5f4ef8992ad.htm">queueIndexAssignmentEligibilityStartCompleteInfo<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">Get a queue index assignment eligibility start complete info object from the message
            (only for LBM.MSG_UMQ_INDEX_ASSIGNMENT_ELIGIBILITY_START_COMPLETE_EX messages).</div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="d1a716ae-29c9-e6e6-108a-4f3435a210e1.htm">queueIndexAssignmentEligibilityStopCompleteInfo<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">Get a queue index assignment eligibility stop complete info object from the message
            (only for LBM.MSG_UMQ_INDEX_ASSIGNMENT_ELIGIBILITY_STOP_COMPLETE_EX messages).</div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="c117194a-f51f-f70e-06a6-88dc58793727.htm">queueIndexInfo<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">Retrieve index information from the message.</div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="7cee9134-0b92-80bb-9fb7-c209b6c1343d.htm">queueIndexReleasedInfo<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">Get a queue index released info object from the message
            only for LBM.MSG_UMQ_INDEX_RELEASED_EX messages).</div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="0007006d-74aa-3c35-8a16-8a5882a4c2f9.htm">queueMessageId<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            The message ID assigned by the queue (UMQ only)
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="cbf33f06-31df-5f6c-a065-7e4c192d7cff.htm">queueRegistrationCompleteInfo<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Get an extended queue registration complete info object from the message
            (only for LBM.MSG_UMQ_REGISTRATION_COMPLETE_EX messages).
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="7bf5ee7f-130b-a6e7-0464-38a17c7ad6a1.htm">reassign(Int32)</a></td><td><div class="summary">
            Do not acknowledge the given message and instead request that the message be reassigned.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="447d2f72-22c5-d3d4-3f88-b086e5911d26.htm">receiverRegistrationId<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            The registration ID for the receiver (UME only).
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="64518e5c-1679-cc72-821b-9e89da3d637b.htm">registrationCompleteInfo<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Get an extended registration complete info object from the message
            (only for LBM.MSG_UME_REGISTRATION_COMPLETE_EX messages).
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="b708a6ca-55ca-90b0-df86-dd02bf08c32a.htm">registrationSuccessInfo<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Get an extended registration success info object from the message (only for
            LBM.MSG_UME_REGISTRATION_SUCCESS_EX messages).
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="85adebd4-8dc8-7395-156c-a4dbe429a56b.htm">respond(<span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Byte<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span></span>, Int32, Int32)</a></td><td><div class="summary">
            Send a response for this request message.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="06a25f96-7e89-9a0e-840e-66a2eca2264f.htm">sendExplicitAck<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Send an explicit ACK for this message (UME only).
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="2aa30755-d4d9-eef7-5002-e5368459098f.htm">sequenceNumber<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            LBM message (or message fragment) sequence number
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="c781b459-0104-6dc9-d14d-f9b8764afef4.htm">source<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Message source
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="93256094-46b9-a5ed-0768-f66eaae0140b.htm">sourceAsCharArray<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Message source
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="64d3cacb-938e-6f8d-7786-b141fb4abe61.htm">sourceClientObject<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Get the source client object for this message's source, as set by an LBMSourceCreationCallback callback delegate.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="79e2b471-6bc8-9a3e-9f79-0893ba042914.htm">sourceRegistrationId<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            The registration ID for the source (UME only).
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="0e8b1dbf-d469-edac-94a1-378a18fed92a.htm">timestampMicroseconds<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Microsecondseconds portion of the timestamp indicating when the message was received. 
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="6a9087bb-5c8c-fa53-43b4-f5caea0d3ebf.htm">timestampSeconds<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Seconds portion of the timestamp indicating when the message was received. 
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="03290391-804a-fcea-6960-223f9c8327b2.htm">topicName<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Topic on which the current message has been delivered.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="87b4e311-0f67-cf42-4dd9-f522a0dbe927.htm">topicNameAsCharArray<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Topic on which the current message has been delivered.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="b6be1861-116e-2abd-b069-9d3c18328388.htm">totalMessageLength<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Total message size.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="16baa67b-0728-c314-4f62-7bdc09d7046b.htm">type<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            LBM message type
            </div><br /></td></tr></table></div></div></div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img src="../icons/collapse_all.gif" /> Exceptions</div><div class="sectionContent"><table class="exceptions"><tr><th class="exceptionNameColumn">Exception</th><th class="exceptionConditionColumn">Condition</th></tr><tr><td></td><td> Invalid argument or unexpected operational behavior has been encountered by unmanaged LBM C layer function.<br /></td></tr></table></div></div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img src="../icons/collapse_all.gif" /> Inheritance Hierarchy</div><div class="sectionContent"><table cellspacing="0" cellpadding="0"><tr><td colspan="2"><a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a></td></tr><tr><td><img src="../icons/LastChild.gif" /></td><td><span class="selflink">LBMMessage</span></td></tr></table></div></div><p><div id="footer">For questions or comments on this topic, contact http://29west.com/support <p />Copyright © 2006-2014 Informatica Corporation. All Rights Reserved.</div>Assembly: <span sdata="assembly">lbmcs</span> (Module: lbmcs) Version: 5.3.6.0</p></div></body></html>